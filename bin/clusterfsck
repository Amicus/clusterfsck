#!/usr/bin/env ruby
require 'commander/import'

$LOAD_PATH.unshift(File.join(File.expand_path(File.dirname(__FILE__)), "../lib"))
require "clusterfsck/cli"

program :version, ClusterFsck::VERSION
program :description, 'Filebased S3 Cofiguration Kontrol for Clusters, by Amicus'

#TODO: (topper) - fill in the help stuff

command :'init' do |c|
  c.syntax = 'clusterfsck init'
  c.summary = 'Create ClusterFsck configuration file - called automatically from other commands if no config found.'
  c.description = 'clusterfsck init'
  c.when_called ClusterFsck::Commands::Setup, :run_command
end

command :edit do |c|
  c.syntax = 'clusterfsck edit [options]'
  c.summary = 'Bring up the YAML for key specified in the current CLUSTER_FSCK_ENV or specified CLUSTER_FSCK_ENV in your $editor'
  c.description = 'clusterfsck edit [cluster_fsck_env] key'
  c.example 'edit stripe in current CLUSTER_FSCK_ENV', 'clusterfsck edit stripe'
  c.example 'edit stripe in staging CLUSTER_FSCK_ENV', 'clusterfsck edit staging stripe'
  c.option '--force', 'force edit even if local file override present'
  c.when_called ClusterFsck::Commands::Edit, :run_command
end

command :new do |c|
  c.syntax = 'clusterfsck new [options]'
  c.summary = 'Create a yaml file for your current CLUSTER_FSCK_ENV or specified CLUSTER_FSCK_ENV'
  c.description = 'clusterfsck new [cluster_fsck_env] key'
  c.example 'create stripe key in current CLUSTER_FSCK_ENV', 'clusterfsck new stripe'
  c.example 'create stripe key in staging CLUSTER_FSCK_ENV', 'clusterfsck new staging stripe'
  c.when_called ClusterFsck::Commands::Create, :run_command
end

command :list do |c|
  c.syntax = 'clusterfsck list'
  c.summary = 'List all keys in the current or specified CLUSTER_FSCK_ENV'
  c.description = 'clusterfsck list [cluster_fsck_env]'
  c.example 'list keys in staging CLUSTER_FSCK_ENV', 'clusterfsck list staging'
  c.when_called ClusterFsck::Commands::List, :run_command
end

command :environments do |c|
  c.syntax = 'clusterfsck environments'
  c.summary = 'List all environments defined in the bucket ClusterFsck is setup using'
  c.description = 'clusterfsck environments [cluster_fsck_env]'
  c.example 'list all environments defined', 'clusterfsck environments'
  c.when_called ClusterFsck::Commands::Environments, :run_command
end

command :override do |c|
  c.syntax = 'clusterfsck override [options]'
  c.summary = 'Will copy down the remote config and create a directory clusterfsck/:CLUSTER_FSCK_ENV/:key that will be used by default over the remote'
  c.description = ''
  c.example 'override the staging stripe key in this working directory', 'clusterfsck override staging stripe'
  c.when_called ClusterFsck::Commands::Override, :run_command
end
