#!/usr/bin/env ruby
require 'commander/import'

$LOAD_PATH.unshift(File.join(File.expand_path(File.dirname(__FILE__)), "../lib"))
require "cluster-fuck/cli"

program :version, ClusterFuck::VERSION
program :description, 'Amicus environment-aware configuration manager'

#TODO: (topper) - fill in the help stuff

command :edit do |c|
  c.syntax = 'clusterfuck edit [options]'
  c.summary = 'Bring up the YAML for key specified in the current AMICUS_ENV or specified AMICUS_ENV in your $editor'
  c.description = 'clusterfuck edit [amicus_env] key'
  c.example 'edit stripe in current AMICUS_ENV', 'clusterfuck edit stripe'
  c.example 'edit stripe in staging AMICUS_ENV', 'clusterfuck edit staging stripe'
  c.option '--force', 'force edit even if local file override present'
  c.when_called ClusterFuck::Commands::Edit, :run_command
end

command :create do |c|
  c.syntax = 'clusterfuck create [options]'
  c.summary = 'create a yaml file for your current AMICUS_ENV or specified AMICUS_ENV'
  c.description = 'clusterfuck create [amicus_env] key'
  c.example 'create stripe key in current AMICUS_ENV', 'clusterfuck create stripe'
  c.example 'create stripe key in staging AMICUS_ENV', 'clusterfuck create staging stripe'
  c.when_called ClusterFuck::Commands::Create, :run_command
end

command :list do |c|
  c.syntax = 'clusterfuck list'
  c.summary = 'list all keys in the current or specified AMICUS_ENV'
  c.description = 'clusterfuck list [amicus_env]'
  c.example 'list keys in staging AMICUS_ENV', 'clusterfuck list staging'
  c.when_called ClusterFuck::Commands::List, :run_command
end

command :override do |c|
  c.syntax = 'clusterfuck override [options]'
  c.summary = 'will copy down the remote config and create a directory clusterfuck/:AMICUS_ENV/:key that will be used by default over the remote'
  c.description = ''
  c.example 'override the staging stripe key in this working directory', 'clusterfuck override staging stripe'
  c.when_called ClusterFuck::Commands::Override, :run_command
end
